import random
import os
from flask import Flask, request, Response
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

# –ó–∞–¥–∞—á–∏ (–æ—Å—Ç–∞–≤–∏–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
tasks = [
    # ... —Ç–≤–æ–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∑–¥–µ—Å—å ...
]

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_current_tasks = {}

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")

application = Application.builder().token(BOT_TOKEN).build()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏–∏. –ù–∞–ø–∏—à–∏ /quiz —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É.")

# –ö–æ–º–∞–Ω–¥–∞ /quiz
async def quiz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    task = random.choice(tasks)
    user_id = update.effective_user.id
    user_current_tasks[user_id] = task
    await update.message.reply_text(f"üß† –°–∏—Ç—É–∞—Ü–∏–æ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞:\n{task['question']}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_answer = update.message.text.strip().lower()

    if user_id in user_current_tasks:
        correct_answer = user_current_tasks[user_id]["answer"].lower()
        if user_answer == correct_answer:
            await update.message.reply_text("‚úÖ –í–µ—Ä–Ω–æ! –ù–∞–ø–∏—à–∏ /quiz –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–¥–∞—á–∏.")
        else:
            await update.message.reply_text(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}\n–ù–∞–ø–∏—à–∏ /quiz –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–¥–∞—á–∏.")
        del user_current_tasks[user_id]
    else:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ /quiz —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É.")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("quiz", quiz))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# Webhook endpoint –¥–ª—è Telegram
@app.route(f"/{BOT_TOKEN}", methods=["POST"])
def webhook():
    data = request.get_json(force=True)
    update = Update.from_dict(data)
    # –î–ª—è –∑–∞–ø—É—Å–∫–∞ async —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ sync –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º run_sync
    application.create_task(application.process_update(update))
    return Response("ok", status=200)

# Endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (UptimeRobot)
@app.route("/", methods=["GET"])
def index():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
@app.before_first_request
def set_webhook():
    application.bot.set_webhook(f"{WEBHOOK_URL}/{BOT_TOKEN}")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8000)))
